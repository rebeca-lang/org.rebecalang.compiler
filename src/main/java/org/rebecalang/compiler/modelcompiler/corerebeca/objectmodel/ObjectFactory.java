//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-146 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.05.29 at 10:12:22 PM IRDT 
//


package org.rebecalang.compiler.modelcompiler.corerebeca.objectmodel;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.rebecalang.compiler.modelcompiler.corerebeca.objectmodel package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.rebecalang.compiler.modelcompiler.corerebeca.objectmodel
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link WhileStatement }
     * 
     */
    public WhileStatement createWhileStatement() {
        return new WhileStatement();
    }

    /**
     * Create an instance of {@link ContinueStatement }
     * 
     */
    public ContinueStatement createContinueStatement() {
        return new ContinueStatement();
    }

    /**
     * Create an instance of {@link RebecInstantiationPrimary }
     * 
     */
    public RebecInstantiationPrimary createRebecInstantiationPrimary() {
        return new RebecInstantiationPrimary();
    }

    /**
     * Create an instance of {@link CastExpression }
     * 
     */
    public CastExpression createCastExpression() {
        return new CastExpression();
    }

    /**
     * Create an instance of {@link PrimaryExpression }
     * 
     */
    public PrimaryExpression createPrimaryExpression() {
        return new PrimaryExpression();
    }

    /**
     * Create an instance of {@link Annotation }
     * 
     */
    public Annotation createAnnotation() {
        return new Annotation();
    }

    /**
     * Create an instance of {@link Literal }
     * 
     */
    public Literal createLiteral() {
        return new Literal();
    }

    /**
     * Create an instance of {@link SwitchStatement }
     * 
     */
    public SwitchStatement createSwitchStatement() {
        return new SwitchStatement();
    }

    /**
     * Create an instance of {@link FieldDeclaration }
     * 
     */
    public FieldDeclaration createFieldDeclaration() {
        return new FieldDeclaration();
    }

    /**
     * Create an instance of {@link ReturnStatement }
     * 
     */
    public ReturnStatement createReturnStatement() {
        return new ReturnStatement();
    }

    /**
     * Create an instance of {@link TermPrimary }
     * 
     */
    public TermPrimary createTermPrimary() {
        return new TermPrimary();
    }

    /**
     * Create an instance of {@link GenericType }
     * 
     */
    public GenericType createGenericType() {
        return new GenericType();
    }

    /**
     * Create an instance of {@link DotPrimary }
     * 
     */
    public DotPrimary createDotPrimary() {
        return new DotPrimary();
    }

    /**
     * Create an instance of {@link VariableDeclarator }
     * 
     */
    public VariableDeclarator createVariableDeclarator() {
        return new VariableDeclarator();
    }

    /**
     * Create an instance of {@link Label }
     * 
     */
    public Label createLabel() {
        return new Label();
    }

    /**
     * Create an instance of {@link PackageDeclaration }
     * 
     */
    public PackageDeclaration createPackageDeclaration() {
        return new PackageDeclaration();
    }

    /**
     * Create an instance of {@link Expression }
     * 
     */
    public Expression createExpression() {
        return new Expression();
    }

    /**
     * Create an instance of {@link OrdinaryPrimitiveType }
     * 
     */
    public OrdinaryPrimitiveType createOrdinaryPrimitiveType() {
        return new OrdinaryPrimitiveType();
    }

    /**
     * Create an instance of {@link RecordDeclaration }
     * 
     */
    public RecordDeclaration createRecordDeclaration() {
        return new RecordDeclaration();
    }

    /**
     * Create an instance of {@link OrdinaryVariableInitializer }
     * 
     */
    public OrdinaryVariableInitializer createOrdinaryVariableInitializer() {
        return new OrdinaryVariableInitializer();
    }

    /**
     * Create an instance of {@link ImportDeclaration }
     * 
     */
    public ImportDeclaration createImportDeclaration() {
        return new ImportDeclaration();
    }

    /**
     * Create an instance of {@link FormalParameterDeclaration }
     * 
     */
    public FormalParameterDeclaration createFormalParameterDeclaration() {
        return new FormalParameterDeclaration();
    }

    /**
     * Create an instance of {@link GenericTypeInstance }
     * 
     */
    public GenericTypeInstance createGenericTypeInstance() {
        return new GenericTypeInstance();
    }

    /**
     * Create an instance of {@link AccessModifier }
     * 
     */
    public AccessModifier createAccessModifier() {
        return new AccessModifier();
    }

    /**
     * Create an instance of {@link BreakStatement }
     * 
     */
    public BreakStatement createBreakStatement() {
        return new BreakStatement();
    }

    /**
     * Create an instance of {@link ParentSuffixPrimary }
     * 
     */
    public ParentSuffixPrimary createParentSuffixPrimary() {
        return new ParentSuffixPrimary();
    }

    /**
     * Create an instance of {@link Type }
     * 
     */
    public Type createType() {
        return new Type();
    }

    /**
     * Create an instance of {@link RecordContent }
     * 
     */
    public RecordContent createRecordContent() {
        return new RecordContent();
    }

    /**
     * Create an instance of {@link RebecaCode }
     * 
     */
    public RebecaCode createRebecaCode() {
        return new RebecaCode();
    }

    /**
     * Create an instance of {@link NonDetExpression }
     * 
     */
    public NonDetExpression createNonDetExpression() {
        return new NonDetExpression();
    }

    /**
     * Create an instance of {@link InstanceofExpression }
     * 
     */
    public InstanceofExpression createInstanceofExpression() {
        return new InstanceofExpression();
    }

    /**
     * Create an instance of {@link BlockStatement }
     * 
     */
    public BlockStatement createBlockStatement() {
        return new BlockStatement();
    }

    /**
     * Create an instance of {@link ForStatement }
     * 
     */
    public ForStatement createForStatement() {
        return new ForStatement();
    }

    /**
     * Create an instance of {@link PlusSubExpression }
     * 
     */
    public PlusSubExpression createPlusSubExpression() {
        return new PlusSubExpression();
    }

    /**
     * Create an instance of {@link ArrayVariableInitializer }
     * 
     */
    public ArrayVariableInitializer createArrayVariableInitializer() {
        return new ArrayVariableInitializer();
    }

    /**
     * Create an instance of {@link MsgsrvDeclaration }
     * 
     */
    public MsgsrvDeclaration createMsgsrvDeclaration() {
        return new MsgsrvDeclaration();
    }

    /**
     * Create an instance of {@link TernaryExpression }
     * 
     */
    public TernaryExpression createTernaryExpression() {
        return new TernaryExpression();
    }

    /**
     * Create an instance of {@link MainRebecDefinition }
     * 
     */
    public MainRebecDefinition createMainRebecDefinition() {
        return new MainRebecDefinition();
    }

    /**
     * Create an instance of {@link Statement }
     * 
     */
    public Statement createStatement() {
        return new Statement();
    }

    /**
     * Create an instance of {@link MainDeclaration }
     * 
     */
    public MainDeclaration createMainDeclaration() {
        return new MainDeclaration();
    }

    /**
     * Create an instance of {@link InterfaceDeclaration }
     * 
     */
    public InterfaceDeclaration createInterfaceDeclaration() {
        return new InterfaceDeclaration();
    }

    /**
     * Create an instance of {@link RebecaModel }
     * 
     */
    public RebecaModel createRebecaModel() {
        return new RebecaModel();
    }

    /**
     * Create an instance of {@link ConstructorDeclaration }
     * 
     */
    public ConstructorDeclaration createConstructorDeclaration() {
        return new ConstructorDeclaration();
    }

    /**
     * Create an instance of {@link ConditionalStatement }
     * 
     */
    public ConditionalStatement createConditionalStatement() {
        return new ConditionalStatement();
    }

    /**
     * Create an instance of {@link ReactiveClassDeclaration }
     * 
     */
    public ReactiveClassDeclaration createReactiveClassDeclaration() {
        return new ReactiveClassDeclaration();
    }

    /**
     * Create an instance of {@link ArrayType }
     * 
     */
    public ArrayType createArrayType() {
        return new ArrayType();
    }

    /**
     * Create an instance of {@link SwitchStatementGroup }
     * 
     */
    public SwitchStatementGroup createSwitchStatementGroup() {
        return new SwitchStatementGroup();
    }

    /**
     * Create an instance of {@link VariableInitializer }
     * 
     */
    public VariableInitializer createVariableInitializer() {
        return new VariableInitializer();
    }

    /**
     * Create an instance of {@link BinaryExpression }
     * 
     */
    public BinaryExpression createBinaryExpression() {
        return new BinaryExpression();
    }

    /**
     * Create an instance of {@link ForInitializer }
     * 
     */
    public ForInitializer createForInitializer() {
        return new ForInitializer();
    }

    /**
     * Create an instance of {@link UnaryExpression }
     * 
     */
    public UnaryExpression createUnaryExpression() {
        return new UnaryExpression();
    }

    /**
     * Create an instance of {@link MethodDeclaration }
     * 
     */
    public MethodDeclaration createMethodDeclaration() {
        return new MethodDeclaration();
    }

    /**
     * Create an instance of {@link SynchMethodDeclaration }
     * 
     */
    public SynchMethodDeclaration createSynchMethodDeclaration() {
        return new SynchMethodDeclaration();
    }

    /**
     * Create an instance of {@link BaseClassDeclaration }
     * 
     */
    public BaseClassDeclaration createBaseClassDeclaration() {
        return new BaseClassDeclaration();
    }

}
