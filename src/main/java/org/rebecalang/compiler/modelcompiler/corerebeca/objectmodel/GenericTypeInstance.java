//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-146 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.05.29 at 10:12:22 PM IRDT 
//

package org.rebecalang.compiler.modelcompiler.corerebeca.objectmodel;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * <p>
 * Java class for GenericTypeInstance complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 * 
 * <pre>
 * &lt;complexType name="GenericTypeInstance">
 *   &lt;complexContent>
 *     &lt;extension base="{http://rebecalang.org/compiler/modelcompiler/corerebecaexpression}Type">
 *       &lt;sequence>
 *         &lt;element name="base" type="{http://rebecalang.org/compiler/modelcompiler/corerebecaexpression}GenericType"/>
 *         &lt;element name="parameters" type="{http://rebecalang.org/compiler/modelcompiler/corerebecaexpression}Type" maxOccurs="unbounded"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "GenericTypeInstance", namespace = "http://rebecalang.org/compiler/modelcompiler/corerebecaexpression", propOrder = {
		"base", "parameters" })
public class GenericTypeInstance extends Type {

	@XmlElement(required = true)
	protected GenericType base;
	@XmlElement(required = true)
	protected List<Type> parameters;

	/**
	 * Gets the value of the base property.
	 * 
	 * @return possible object is {@link GenericType }
	 * 
	 */
	public GenericType getBase() {
		return base;
	}

	/**
	 * Sets the value of the base property.
	 * 
	 * @param value allowed object is {@link GenericType }
	 * 
	 */
	public void setBase(GenericType value) {
		this.base = value;
	}

	/**
	 * Gets the value of the parameters property.
	 * 
	 * <p>
	 * This accessor method returns a reference to the live list, not a snapshot.
	 * Therefore any modification you make to the returned list will be present
	 * inside the JAXB object. This is why there is not a <CODE>set</CODE> method
	 * for the parameters property.
	 * 
	 * <p>
	 * For example, to add a new item, do as follows:
	 * 
	 * <pre>
	 * getParameters().add(newItem);
	 * </pre>
	 * 
	 * 
	 * <p>
	 * Objects of the following type(s) are allowed in the list {@link Type }
	 * 
	 * 
	 */
	public List<Type> getParameters() {
		if (parameters == null) {
			parameters = new ArrayList<Type>();
		}
		return this.parameters;
	}

	public String getTypeName() {
		String typeInstanceName = "";
		for (Type parameter : this.getParameters())
			typeInstanceName += ',' + parameter.getTypeName();
		return this.getBase().getName() + '<' + typeInstanceName.substring(1) + '>';
	}
	public boolean canTypeUpCastTo(Type target) {
		if (!(target instanceof GenericTypeInstance))
			return false;
		GenericTypeInstance gisBase = (GenericTypeInstance)this;
		GenericTypeInstance gisTarget = (GenericTypeInstance)target;
		if(gisBase.getBase() != gisTarget.getBase())
			return false;
		for(int cnt = 0; cnt < gisBase.getParameters().size(); cnt++)
			if(gisBase.getParameters().get(cnt) != gisTarget.getParameters().get(cnt))
				return false;
		return true;
	}
}
