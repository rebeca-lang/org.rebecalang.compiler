
reactiveclass CloudController(5)
{
	knownrebecs
	{
		DataCenterController dcc1;
		DataCenterController dcc2;
		DataCenterController dcc3;
		//DataCenterController dcc4;
	}
	
	statevars
	{
		int ARRAY_SIZE;
		int[16] m_locality_dcc1;
		int[16] m_locality_dcc2;
		int[16] m_locality_dcc3;
		//int[16] m_locality_dcc4;

		int m_free_vms_dcc1;
		int m_free_vms_dcc2;
		int m_free_vms_dcc3;
		//int m_free_vms_dcc4;
	}
	
	CloudController()
	{
		ARRAY_SIZE = 16;

		// 3 DCC, ARRAY SIZE 12
		// 0, 1, 2, 3, 4, 5, 6, 5, 4, 3, 2, 1
		// 0, 1, 0, 1, 3, 0, 6, 0, 0, 0, 0, 1
		// 0, 0, 1, 1, 0, 2, 0, 3, 4, 2, 0, 0
		// 0, 0, 1, 1, 1, 3, 0, 2, 0, 1, 2, 0
		/*m_locality_dcc1[0] = 0; // 0
		m_locality_dcc1[1] = 1; // 1
		m_locality_dcc1[2] = 0; // 2
		m_locality_dcc1[3] = 1; // 3
		m_locality_dcc1[4] = 3; // 4
		m_locality_dcc1[5] = 6; // 5
		m_locality_dcc1[6] = 0; // 6
		m_locality_dcc1[7] = 0; // 5
		m_locality_dcc1[8] = 0; // 4
		m_locality_dcc1[9] = 0; // 3
		m_locality_dcc1[10] = 0; // 2
		m_locality_dcc1[11] = 1; // 1

		// 0, 0, 1, 1, 0, 2, 0, 3, 4, 2, 0, 0
		m_locality_dcc2[0] = 0; // 0
		m_locality_dcc2[1] = 0; // 1
		m_locality_dcc2[2] = 1; // 2
		m_locality_dcc2[3] = 1; // 3
		m_locality_dcc2[4] = 0; // 4
		m_locality_dcc2[5] = 2; // 5
		m_locality_dcc2[6] = 0; // 6
		m_locality_dcc2[7] = 3; // 5
		m_locality_dcc2[8] = 4; // 4
		m_locality_dcc2[9] = 2; // 3
		m_locality_dcc2[10] = 0; // 2
		m_locality_dcc2[11] = 0; // 1

		// 0, 0, 1, 1, 1, 3, 0, 2, 0, 1, 2, 0
		m_locality_dcc3[0] = 0; // 0
		m_locality_dcc3[1] = 0; // 1
		m_locality_dcc3[2] = 1; // 2
		m_locality_dcc3[3] = 1; // 3
		m_locality_dcc3[4] = 1; // 4
		m_locality_dcc3[5] = 3; // 5
		m_locality_dcc3[6] = 0; // 6
		m_locality_dcc3[7] = 2; // 5
		m_locality_dcc3[8] = 0; // 4
		m_locality_dcc3[9] = 1; // 3
		m_locality_dcc3[10] = 2; // 2
		m_locality_dcc3[11] = 0;*/ // 1

		// 3DCC, ARRAY SIZE 16
		// 0, 1, 2, 3, 4, 5, 6, 7, 8, 7, 6, 5, 4, 3, 2, 1
		// 0, 1, 0, 3, 0, 1, 4, 6, 0, 1, 2, 1, 0, 1, 2, 0
		// 0, 0, 1, 0, 2, 3, 1, 0, 8, 1, 2, 3, 0, 0, 0, 0
		// 0, 0, 1, 0, 2, 1, 1, 1, 0, 5, 2, 1, 4, 2, 0, 1

		// 0, 1, 0, 3, 0, 1, 4, 6, 0, 1, 2, 1, 0, 1, 2, 0
		m_locality_dcc1[0] = 0; // 0
		m_locality_dcc1[1] = 1; // 1
		m_locality_dcc1[2] = 0; // 2
		m_locality_dcc1[3] = 3; // 3
		m_locality_dcc1[4] = 0; // 4
		m_locality_dcc1[5] = 1; // 5
		m_locality_dcc1[6] = 4; // 6
		m_locality_dcc1[7] = 6; // 7
		m_locality_dcc1[8] = 0; // 8
		m_locality_dcc1[9] = 1; // 7
		m_locality_dcc1[10] = 2; // 6
		m_locality_dcc1[11] = 1; // 5
		m_locality_dcc1[12] = 0; // 4
		m_locality_dcc1[13] = 1; // 3
		m_locality_dcc1[14] = 2; // 2
		m_locality_dcc1[15] = 0; // 1

		// 0, 0, 1, 0, 2, 3, 1, 0, 8, 1, 2, 3, 0, 0, 0, 0
		m_locality_dcc2[0] = 0; // 0
		m_locality_dcc2[1] = 0; // 1
		m_locality_dcc2[2] = 1; // 2
		m_locality_dcc2[3] = 0; // 3
		m_locality_dcc2[4] = 2; // 4
		m_locality_dcc2[5] = 3; // 5
		m_locality_dcc2[6] = 1; // 6
		m_locality_dcc2[7] = 0; // 7
		m_locality_dcc2[8] = 8; // 8
		m_locality_dcc2[9] = 1; // 7
		m_locality_dcc2[10] = 2; // 6
		m_locality_dcc2[11] = 3; // 5
		m_locality_dcc2[12] = 0; // 4
		m_locality_dcc2[13] = 0; // 3
		m_locality_dcc2[14] = 0; // 2
		m_locality_dcc2[15] = 0; // 1

		// 0, 0, 1, 0, 2, 1, 1, 1, 0, 5, 2, 1, 4, 2, 0, 1
		m_locality_dcc3[0] = 0; // 0
		m_locality_dcc3[1] = 0; // 1
		m_locality_dcc3[2] = 1; // 2
		m_locality_dcc3[3] = 0; // 3
		m_locality_dcc3[4] = 2; // 4
		m_locality_dcc3[5] = 1; // 5
		m_locality_dcc3[6] = 1; // 6
		m_locality_dcc3[7] = 1; // 7
		m_locality_dcc3[8] = 0; // 8
		m_locality_dcc3[9] = 5; // 7
		m_locality_dcc3[10] = 2; // 6
		m_locality_dcc3[11] = 1; // 5
		m_locality_dcc3[12] = 4; // 4
		m_locality_dcc3[13] = 2; // 3
		m_locality_dcc3[14] = 0; // 2
		m_locality_dcc3[15] = 1; // 1

		// 4 DCC, ARRAY SIZE 12
		// 0, 1, 2, 3, 4, 5, 6, 5, 4, 3, 2, 1
		// 0, 1, 0, 3, 0, 0, 5, 0, 0, 0, 0, 0
		// 0, 0, 1, 0, 1, 0, 1, 2, 0, 3, 1, 0
		// 0, 0, 1, 0, 2, 2, 0, 1, 1, 0, 1, 1
		// 0, 0, 0, 0, 1, 3, 0, 2, 3, 0, 0, 0

		// 0, 1, 0, 3, 0, 0, 5, 0, 0, 0, 0, 0
		/*m_locality_dcc1[0] = 0; // 0
		m_locality_dcc1[1] = 1; // 1
		m_locality_dcc1[2] = 0; // 2
		m_locality_dcc1[3] = 3; // 3
		m_locality_dcc1[4] = 0; // 4
		m_locality_dcc1[5] = 0; // 5
		m_locality_dcc1[6] = 5; // 6
		m_locality_dcc1[7] = 0; // 5
		m_locality_dcc1[8] = 0; // 4
		m_locality_dcc1[9] = 0; // 3
		m_locality_dcc1[10] = 0; // 2
		m_locality_dcc1[11] = 0; // 1

		// 0, 0, 1, 0, 1, 0, 1, 2, 0, 3, 1, 0
		m_locality_dcc2[0] = 0; // 0
		m_locality_dcc2[1] = 0; // 1
		m_locality_dcc2[2] = 1; // 2
		m_locality_dcc2[3] = 0; // 3
		m_locality_dcc2[4] = 1; // 4
		m_locality_dcc2[5] = 0; // 5
		m_locality_dcc2[6] = 1; // 6
		m_locality_dcc2[7] = 2; // 5
		m_locality_dcc2[8] = 0; // 4
		m_locality_dcc2[9] = 3; // 3
		m_locality_dcc2[10] = 1; // 2
		m_locality_dcc2[11] = 0; // 1

		// 0, 0, 1, 0, 2, 2, 0, 1, 1, 0, 1, 1
		m_locality_dcc3[0] = 0; // 0
		m_locality_dcc3[1] = 0; // 1
		m_locality_dcc3[2] = 1; // 2
		m_locality_dcc3[3] = 0; // 3
		m_locality_dcc3[4] = 2; // 4
		m_locality_dcc3[5] = 2; // 5
		m_locality_dcc3[6] = 0; // 6
		m_locality_dcc3[7] = 1; // 5
		m_locality_dcc3[8] = 1; // 4
		m_locality_dcc3[9] = 0; // 3
		m_locality_dcc3[10] = 1; // 2
		m_locality_dcc3[11] = 1; // 1

		// 0, 0, 0, 0, 1, 3, 0, 2, 3, 0, 0, 0
		m_locality_dcc4[0] = 0; // 0
		m_locality_dcc4[1] = 0; // 1
		m_locality_dcc4[2] = 0; // 2
		m_locality_dcc4[3] = 0; // 3
		m_locality_dcc4[4] = 1; // 4
		m_locality_dcc4[5] = 3; // 5
		m_locality_dcc4[6] = 0; // 6
		m_locality_dcc4[7] = 2; // 5
		m_locality_dcc4[8] = 3; // 4
		m_locality_dcc4[9] = 0; // 3
		m_locality_dcc4[10] = 0; // 2
		m_locality_dcc4[11] = 0;*/ // 1

		// 4 DCC, ARRAY SIZE 16
		// 0, 1, 2, 3, 4, 5, 6, 7, 8, 7, 6, 5, 4, 3, 2, 1
		// 0, 1, 0, 3, 0, 0, 1, 4, 5, 0, 0, 0, 1, 0, 0, 1
		// 0, 0, 1, 0, 0, 2, 0, 0, 3, 0, 4, 1, 3, 0, 2, 0
		// 0, 0, 1, 0, 2, 1, 5, 2, 0, 0, 1, 2, 0, 2, 0, 0 
		// 0, 0, 0, 0, 2, 2, 0, 1, 0, 7, 1, 2, 0, 1, 0, 0

		// 0, 1, 0, 3, 0, 0, 1, 4, 5, 0, 0, 0, 1, 0, 0, 1
		/*m_locality_dcc1[0] = 0; // 0
		m_locality_dcc1[1] = 1; // 1
		m_locality_dcc1[2] = 0; // 2
		m_locality_dcc1[3] = 3; // 3
		m_locality_dcc1[4] = 0; // 4
		m_locality_dcc1[5] = 0; // 5
		m_locality_dcc1[6] = 1; // 6
		m_locality_dcc1[7] = 4; // 7
		m_locality_dcc1[8] = 5; // 8
		m_locality_dcc1[9] = 0; // 7
		m_locality_dcc1[10] = 0; // 6
		m_locality_dcc1[11] = 0; // 5
		m_locality_dcc1[12] = 1; // 4
		m_locality_dcc1[13] = 0; // 3
		m_locality_dcc1[14] = 0; // 2
		m_locality_dcc1[15] = 1; // 1

		// 0, 0, 1, 0, 0, 2, 0, 0, 3, 0, 4, 1, 3, 0, 2, 0
		m_locality_dcc2[0] = 0; // 0
		m_locality_dcc2[1] = 0; // 1
		m_locality_dcc2[2] = 1; // 2
		m_locality_dcc2[3] = 0; // 3
		m_locality_dcc2[4] = 0; // 4
		m_locality_dcc2[5] = 2; // 5
		m_locality_dcc2[6] = 0; // 6
		m_locality_dcc2[7] = 0; // 7
		m_locality_dcc2[8] = 3; // 8
		m_locality_dcc2[9] = 0; // 7
		m_locality_dcc2[10] = 4; // 6
		m_locality_dcc2[11] = 1; // 5
		m_locality_dcc2[12] = 3; // 4
		m_locality_dcc2[13] = 0; // 3
		m_locality_dcc2[14] = 2; // 2
		m_locality_dcc2[15] = 0; // 1

		// 0, 0, 1, 0, 2, 1, 5, 2, 0, 0, 1, 2, 0, 2, 0, 0 
		m_locality_dcc3[0] = 0; // 0
		m_locality_dcc3[1] = 0; // 1
		m_locality_dcc3[2] = 1; // 2
		m_locality_dcc3[3] = 0; // 3
		m_locality_dcc3[4] = 2; // 4
		m_locality_dcc3[5] = 1; // 5
		m_locality_dcc3[6] = 5; // 6
		m_locality_dcc3[7] = 2; // 7
		m_locality_dcc3[8] = 0; // 8
		m_locality_dcc3[9] = 0; // 7
		m_locality_dcc3[10] = 1; // 6
		m_locality_dcc3[11] = 2; // 5
		m_locality_dcc3[12] = 0; // 4
		m_locality_dcc3[13] = 2; // 3
		m_locality_dcc3[14] = 0; // 2
		m_locality_dcc3[15] = 0; // 1

		// 0, 0, 0, 0, 2, 2, 0, 1, 0, 7, 1, 2, 0, 1, 0, 0
		m_locality_dcc4[0] = 0; // 0
		m_locality_dcc4[1] = 0; // 1
		m_locality_dcc4[2] = 0; // 2
		m_locality_dcc4[3] = 0; // 3
		m_locality_dcc4[4] = 2; // 4
		m_locality_dcc4[5] = 2; // 5
		m_locality_dcc4[6] = 0; // 6
		m_locality_dcc4[7] = 1; // 7
		m_locality_dcc4[8] = 0; // 8
		m_locality_dcc4[9] = 7; // 7
		m_locality_dcc4[10] = 1; // 6
		m_locality_dcc4[11] = 2; // 5
		m_locality_dcc4[12] = 0; // 4
		m_locality_dcc4[13] = 1; // 3
		m_locality_dcc4[14] = 0; // 2
		m_locality_dcc4[15] = 0;*/ // 1

		m_free_vms_dcc1 = 0;
		m_free_vms_dcc2 = 0;
		m_free_vms_dcc3 = 0;
		//m_free_vms_dcc4 = 0;

		self.start();
	}
	
	msgsrv start()
	{
		dcc1.queryResourceAvailability();
		dcc2.queryResourceAvailability();
		dcc3.queryResourceAvailability();
		//dcc4.queryResourceAvailability();
		self.provision() after(1);
	}
	
	msgsrv informResourceAvailability( int free_vms )
	{
		if( sender == dcc1 )
		{
			m_free_vms_dcc1 = free_vms;
		}
		else if( sender == dcc2 )
		{
			m_free_vms_dcc2 = free_vms;
		}
		else if( sender == dcc3 )
		{
			m_free_vms_dcc3 = free_vms;
		}
		/*else if( sender == dcc4 )
		{
			m_free_vms_dcc4 = free_vms;
		}*/
	}
	
	msgsrv provision()
	{
		// TODO: queue up dropped requests
		int cur_index = now % ARRAY_SIZE;
		int requests_dcc1 = m_locality_dcc1[ cur_index ];
		int requests_dcc2 = m_locality_dcc2[ cur_index ];
		int requests_dcc3 = m_locality_dcc3[ cur_index ];
		//int requests_dcc4 = m_locality_dcc4[ cur_index ];
		
		int overflow_dcc1 = ( m_free_vms_dcc1 - requests_dcc1 ) * (-1);
		int overflow_dcc2 = ( m_free_vms_dcc2 - requests_dcc2 ) * (-1);
		int overflow_dcc3 = ( m_free_vms_dcc3 - requests_dcc3 ) * (-1);
		//int overflow_dcc4 = ( m_free_vms_dcc4 - requests_dcc4 ) * (-1);

		if( overflow_dcc1 > 0 )
		{
			requests_dcc1 = m_free_vms_dcc1; // fill up dcc1
		}

		if( overflow_dcc2 > 0 )
		{
			requests_dcc2 = m_free_vms_dcc2; // fill up the dcc
		}

		// 3 DCC
		if( overflow_dcc3 > 0 )
		{
			requests_dcc3 = m_free_vms_dcc3; // fill up the dcc
		}

		// 4 DCC
		
		/*if( overflow_dcc4 > 0 )
		{
			requests_dcc4 = m_free_vms_dcc4; // fill up the dcc
		}*/

		if( requests_dcc1 > 0 )
		{
			dcc1.provision( requests_dcc1 );
		}
		if( requests_dcc2 > 0 )
		{
			dcc2.provision( requests_dcc2 );
		}
		if( requests_dcc3 > 0 )
		{
			dcc3.provision( requests_dcc3 );
		}
		/*if( requests_dcc4 > 0 )
		{
			dcc4.provision( requests_dcc4 );
		}*/
		
		self.provision() after(1);
	}
}

reactiveclass DataCenterController(5)
{
	knownrebecs
	{
		CloudController cc;
		DataCenterController dcc1;
		DataCenterController dcc2;
		DataCenterController dcc3;
		//DataCenterController dcc4;
	}
	
	statevars
	{
		int m_max_vms;
		int m_free_vms;
	}
	
	DataCenterController()
	{
		m_max_vms = 11;
		m_free_vms = m_max_vms;
	}
		
	msgsrv queryResourceAvailability()
	{
		cc.informResourceAvailability( m_free_vms );
	}
	
	msgsrv provision( int vms )
	{
		int freed_vms = ?( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 );//, 12 );//, 13, 14, 15, 16 );
		m_free_vms += freed_vms;
		if( m_free_vms > m_max_vms )
		{
			m_free_vms = m_max_vms;
		}
		m_free_vms -= vms;
		if( m_free_vms < 0 )
		{
			m_free_vms = 0;
		}
		cc.informResourceAvailability( m_free_vms );
	}
}

main
{
	CloudController cc( dcc1, dcc2, dcc3 ):();
	DataCenterController dcc1( cc, dcc1, dcc2, dcc3 ):();
	DataCenterController dcc2( cc, dcc1, dcc2, dcc3 ):();
	DataCenterController dcc3( cc, dcc1, dcc2, dcc3 ):();
	DataCenterController dcc4( cc, dcc1, dcc2, dcc3 ):();

	/*CloudController cc( dcc1, dcc2, dcc3, dcc4 ):();
	DataCenterController dcc1( cc, dcc1, dcc2, dcc3, dcc4 ):();
	DataCenterController dcc2( cc, dcc1, dcc2, dcc3, dcc4 ):();
	DataCenterController dcc3( cc, dcc1, dcc2, dcc3, dcc4 ):();
	DataCenterController dcc4( cc, dcc1, dcc2, dcc3, dcc4 ):();*/
}