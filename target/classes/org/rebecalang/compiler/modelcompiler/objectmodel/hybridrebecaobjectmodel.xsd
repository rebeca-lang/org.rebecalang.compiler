<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
	elementFormDefault="qualified" targetNamespace="http://rebecalang.org/compiler/modelcompiler/hybridrebeca"
	xmlns:corerebecaexp="http://rebecalang.org/compiler/modelcompiler/corerebecaexpression"
	xmlns:corerebeca="http://rebecalang.org/compiler/modelcompiler/corerebeca"
	xmlns="http://rebecalang.org/compiler/modelcompiler/hybridrebeca">

 	<xs:import namespace="http://rebecalang.org/compiler/modelcompiler/corerebecaexpression"
		schemaLocation="corerebecaexpressionobjectmodel.xsd" />
	<xs:import namespace="http://rebecalang.org/compiler/modelcompiler/corerebeca"
		schemaLocation="corerebecaobjectmodel.xsd" />

	<xs:complexType name="HybridRebecaCode">
		<xs:complexContent>
			<xs:extension base="corerebeca:RebecaCode">
                <xs:sequence>
                    <xs:element name="physicalClassDeclaration" type="PhysicalClassDeclaration" maxOccurs="unbounded" minOccurs="0"/>
                </xs:sequence>
    		</xs:extension>
    	</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="PhysicalClassDeclaration">
		<xs:complexContent>
			<xs:extension base="corerebeca:ReactiveClassDeclaration">
                <xs:sequence>
                    <xs:element name="modeDeclarations" type="ModeDeclaration" maxOccurs="unbounded" minOccurs="0"/>
                </xs:sequence>              
    		</xs:extension>
    	</xs:complexContent>
	</xs:complexType>
	
    <xs:complexType name="ModeDeclaration">
        <xs:sequence>
	        <xs:element name="invariantDeclaration" type="InvariantDeclaration"/>
	        <xs:element name="guardDeclaration" type="GuardDeclaration"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string"/>
        <xs:attribute name="lineNumber" type="xs:int"/>
        <xs:attribute name="character" type="xs:int"/>
    </xs:complexType>                                         
	
    <xs:complexType name="InvariantDeclaration">
        <xs:sequence>
	        <xs:element name="block" type="corerebeca:BlockStatement"/>
        	<xs:element name="condition" type="corerebecaexp:Expression"/>
        </xs:sequence>
        <xs:attribute name="lineNumber" type="xs:int"/>
        <xs:attribute name="character" type="xs:int"/>
    </xs:complexType>                                         
	
    <xs:complexType name="GuardDeclaration">
        <xs:sequence>
	        <xs:element name="block" type="corerebeca:BlockStatement"/>
        	<xs:element name="condition" type="corerebecaexp:Expression"/>
        </xs:sequence>
        <xs:attribute name="lineNumber" type="xs:int"/>
        <xs:attribute name="character" type="xs:int"/>
    </xs:complexType>  
                                           
	<xs:complexType name="HybridTermPrimary">
		<xs:complexContent>
			<xs:extension base="corerebecaexp:TermPrimary">
            	<xs:attribute name="derivativeOrder" type="xs:int" default="0"/>
    		</xs:extension>
    	</xs:complexContent>
	</xs:complexType>
	

</xs:schema>